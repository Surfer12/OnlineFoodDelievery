Project Assignment: Online Food Delivery System (Java)

Objective:

This project aims to design and implement a simplified online food delivery system using Java. It serves as a practical exercise to demonstrate your understanding of object-oriented programming (OOP) principles and data structures.

System Requirements:

The online food delivery system must include the following functionalities:

1. Ordering:

	•	Customers can place orders for hamburgers, fries, and drinks.
	•	Each menu item should have a name and price.
	•	Orders must store:
	•	Customer details.
	•	Selected items.
	•	Order status (e.g., placed, accepted, delivered).

2. Delivery:

	•	Drivers can accept and deliver orders.
	•	The system keeps track of basic driver information (e.g., name, location).

3. Rating:

	•	Customers can rate drivers on a scale of 1 to 5 after order delivery.
	•	Each driver can store up to 10 ratings. New ratings will replace the oldest ones.

4. Order Processing:

	•	Orders must be processed in the order they are received (First-In, First-Out).

Tasks:

To complete the project, perform the following tasks:

1. Design:

	•	Create comprehensive class diagrams to model the system structure, including all relevant classes, attributes, and methods.
	•	Clearly define the relationships between classes (e.g., inheritance).
	•	Ensure the design adheres to OOP principles.

2. OOP Principles:

Provide a detailed explanation of how the design incorporates the four fundamental OOP principles:
	•	Encapsulation
	•	Abstraction
	•	Inheritance
	•	Polymorphism

3. Data Structures:

	•	Describe the data structures used to implement the system functionalities.
	•	Justify the choices based on requirements and efficiency considerations.

4. Implementation:

	•	Write Java code based on the design.
	•	Include methods for:
	•	Placing orders.
	•	Accepting and delivering orders.
	•	Calculating order totals.
	•	Managing driver ratings.
	•	Ensure orders are processed in the correct order (FIFO).
	•	Use GitHub for version control and collaborative development.

5. Demonstration:

	•	Demonstrate the working system. Instructions for the demonstration will be provided later.

Submission and Deadlines:

1. Friday, November 8, 2024 (100 points):

	•	Submit a PDF document named CIS233_GROUP_NAME.pdf (replace GROUP_NAME with your actual group name).
	•	The document must include:
	•	The first version of the system design (class diagrams).
	•	Explanations of how you applied OOP principles.
	•	Descriptions of the chosen data structures.
	•	One person from each group must submit the document.

Grading Rubric:

	•	Design (60%): Well-designed system using OOP principles, with clear class diagrams.
	•	Data Structures (30%): Appropriate and effectively utilized data structures.
	•	Document Clarity (10%): Clear, concise, and easy-to-read submission.

2. Thursday, November 14, 2024 (50 points):

	•	Submit a revised version of the system design and implementation based on feedback received.

3. Thursday, November 21, 2024 (50 points):

	•	Demonstrate the current system code with some core classes implemented.

4. Thursday, December 5, 2024 (100 points):

	•	Submit the final code and demonstrate the complete working system.

Notes:

This project evaluates your ability to apply OOP concepts, data structures, and software development best practices. Ensure:
	•	Your design is robust.
	•	Your code is well-documented.
	•	Your system meets all specified requirements.

Good luck!