plugins {
    id 'java'
    id 'java-library'
    id 'application'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'checkstyle'
}

group = 'com.yourcompany'
version = '0.0.1-SNAPSHOT'

// Java version configuration
java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

// Repository configurations
repositories {
    mavenCentral()
    mavenLocal()
}

// Source set configurations
sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

// Dependency versions
ext {
    junitVersion = '5.10.1'
    mockitoVersion = '5.8.0'
    springBootVersion = '3.2.1'
    slf4jVersion = '2.0.9'
}

// Dependencies
dependencies {
    // Spring Boot Starter
    implementation 'org.springframework.boot:spring-boot-starter'
    
    // Logging
    implementation "org.slf4j:slf4j-api:${slf4jVersion}"
    implementation 'ch.qos.logback:logback-classic:1.4.14'
    
    // Validation
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
    
    // Utilities
    implementation 'com.google.guava:guava:32.1.3-jre'
    
    // Testing
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Add these to resolve potential missing classes
    implementation 'org.apache.commons:commons-lang3:3.12.0'
}

// Application configuration
application {
    mainClass = 'app.Application'
}

// Test configuration
test {
    useJUnitPlatform {
        includeTags 'unit', 'integration'
        excludeTags 'performance'
    }
    testLogging {
        events 'passed', 'skipped', 'failed'
    }
}

// Checkstyle configuration
checkstyle {
    toolVersion = '10.12.4'
    configFile = file('config/checkstyle/checkstyle.xml')
    maxWarnings = 0
}

// Jar configuration
jar {
    enabled = true
    archiveClassifier = ''
}

// Configuration cache settings
gradle.startParameter.configurationCache.set(false)

// Explicitly disable source dependency caching
configurations.all {
    resolutionStrategy {
        cacheChangingModulesFor 0, 'seconds'
    }
} 